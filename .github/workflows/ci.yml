name: 🚀 Continuous Integration

on:
  push:
    branches: [main, develop, optimization]
  pull_request:
    branches: [main, develop]

permissions:
  actions: read
  contents: read
  security-events: write
  pull-requests: write

env:
  NODE_VERSION: "20"

jobs:
  # Job 1: Code Quality & Linting
  lint-and-format:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 📝 Check TypeScript
        run: npm run type-check || npx tsc --noEmit

      - name: 🎨 Check code formatting
        run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"

  # Job 2: Unit & Integration Tests
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [unit, integration]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧪 Run tests with coverage
        run: npm test -- --coverage --reporter=verbose
        env:
          CI: true

      - name: 📊 Upload coverage to Codecov
        if: matrix.test-type == 'unit'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Job 3: Build Verification
  build:
    name: 🏗️ Build Verification
    runs-on: ubuntu-latest
    needs: [lint-and-format]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 7

      - name: 📊 Analyze bundle size
        run: |
          echo "## 📦 Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          echo "| File | Size |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------|" >> $GITHUB_STEP_SUMMARY
          find dist -name "*.js" -exec ls -lh {} \; | awk '{print "| " $9 " | " $5 " |"}' >> $GITHUB_STEP_SUMMARY

  # Job 4: Security Audit
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔒 Run security audit
        run: npm audit --audit-level=moderate

      - name: 🔍 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-and-quality

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"

  # Job 5: Performance Testing
  performance:
    name: ⚡ Performance Testing
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: ⚡ Run performance tests
        run: |
          echo "## ⚡ Performance Metrics" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|--------|" >> $GITHUB_STEP_SUMMARY

          # Simulate performance testing
          BUNDLE_SIZE=$(du -sh dist/ | cut -f1)
          echo "| Bundle Size | $BUNDLE_SIZE | ✅ |" >> $GITHUB_STEP_SUMMARY

          # Check if lazy loading files exist
          if [ -f "dist/assets/HomePage-*.js" ]; then
            echo "| Lazy Loading | Enabled | ✅ |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Lazy Loading | Disabled | ⚠️ |" >> $GITHUB_STEP_SUMMARY
          fi

  # Job 6: Deployment Preview (for PRs)
  preview-deploy:
    name: 🚀 Preview Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [test, build, security]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: 🚀 Deploy to Vercel Preview
        run: npx vercel --token ${{ secrets.VERCEL_TOKEN }} --prod

  # Job 8: Notification
  notify:
    name: 📢 Notifications
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, build, security, performance]
    if: always()
    steps:
      - name: 📢 Notify on success
        if: ${{ needs.test.result == 'success' && needs.build.result == 'success' }}
        run: |
          echo "## ✅ CI Pipeline Successful!" >> $GITHUB_STEP_SUMMARY
          echo "All checks passed successfully. Ready for deployment!" >> $GITHUB_STEP_SUMMARY

      - name: 📢 Notify on failure
        if: ${{ needs.test.result == 'failure' || needs.build.result == 'failure' }}
        run: |
          echo "## ❌ CI Pipeline Failed!" >> $GITHUB_STEP_SUMMARY
          echo "Some checks failed. Please review the logs and fix issues." >> $GITHUB_STEP_SUMMARY
