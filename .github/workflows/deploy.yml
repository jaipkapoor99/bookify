name: 🚀 Production Deployment

on:
  push:
    branches: [main]
    tags: ["v*"]
  release:
    types: [published]

env:
  NODE_VERSION: "20"
  DEPLOYMENT_ENVIRONMENT: production

jobs:
  # Job 1: Pre-deployment Checks
  pre-deploy-checks:
    name: 🔍 Pre-deployment Validation
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧪 Run critical tests
        run: npm test -- --run

      - name: 📊 Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "📦 Version: $VERSION" >> $GITHUB_STEP_SUMMARY

      - name: ✅ Deployment check
        id: check
        run: |
          echo "should-deploy=true" >> $GITHUB_OUTPUT
          echo "✅ All pre-deployment checks passed!" >> $GITHUB_STEP_SUMMARY

  # Job 2: Build Production Assets
  build-production:
    name: 🏗️ Production Build
    runs-on: ubuntu-latest
    needs: [pre-deploy-checks]
    if: needs.pre-deploy-checks.outputs.should-deploy == 'true'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build for production
        run: npm run build
        env:
          NODE_ENV: production
          VITE_APP_VERSION: ${{ needs.pre-deploy-checks.outputs.version }}

      - name: 📦 Upload production build
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: dist/
          retention-days: 30

  # Job 3: Production Deployment
  deploy-production:
    name: 🌟 Deploy to Production
    runs-on: ubuntu-latest
    needs: [pre-deploy-checks, build-production]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: production-build
          path: dist/

      - name: 🚀 Deploy to Vercel Production
        run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
